DESCRIPTION
	Possible instructions are:

	break REG VAL
		Constructs a break point: The debugger will stop if the register REG has the
		value VAL.

	exit
		exits the debugger.

	help
		displays this help.

	ls-break
		Lists all breakpoints that are available.

	ls-macro-code [NUM1 [NUM2]]
		Prints the assembler code to the user, trying to disassemble it.
		If parameters are omitted, then the whole code will be printed to the user.
		If only NUM1 is given, then NUM1 lines of code before and after the current
		assembler instruction will be printed.
		If also NUM2 is given, NUM1 is a number referring the first line to print
		and NUM2 the number of the last line to print. Lines are numbered according
		to the output of this function without parameters.

	ls-micro-code [NUM1 [NUM2]]
		Prints the micro code to the user, trying to disassemble it.
		If parameters are omitted, then the whole code will be printed to the user.
		If only NUM1 is given, then NUM1 lines of code before and after the current
		micro code instruction will be printed.
		If also NUM2 is given, NUM1 is a number referring the first line to print
		and NUM2 the number of the last line to print. Lines are numbered according
		to the output of this function without parameters.

	ls-mem FROM TO
		Prints the content of the memory between the given addresses.
		FROM is the address of the first word to print and TO the address of the last
		word to print.

	ls-reg [REG]
		Lists the value of a register, where REG is the name of that register.
		If REG is omitted then the values of all registers are listed.

	macro-break LINE
		Adds a breakpoint to the given line number (=LINE) in the macro code.
		The line number refers to the line numbers fetched from ls-macro-code.

	micro-break LINE
		Adds a breakpoint to the given line number (=LINE) in the micro code.
		The line number refers to the line numbers fetched from ls-micro-code.

	micro-step [NUM]
		Executes NUM micro instructions, where NUM is a natural number. If NUM is
		omitted then one instruction will be executed.
		The processor executes only instructions until the halt-instruction is found.

	reset
		Resets the processor to its initial state. Current instruction and position
		in code will be set to the initial state.

	rm-break NUM
		Removes the breakpoint with the id NUM. The NUM can be fetched with the
		'ls-break' command.

	run
		runs the program until its end or until a breakpoint is hit.

	set REG VAL
		Sets REG's value to VAL. Where REG is the name of a register and VAL the
		new value for that register.

	set-mem ADDR VAL
		Sets the value of the main memory at the address ADDR. Where VAL is the new
		value to store at that address.

	step [NUM]
		Executes NUM macro instructions, where NUM is a natural number. If NUM is
		omitted then one instruction will be executed.
		The processor executes only instructions until the halt-instruction is found.

	trace-mac
		Traces the executed macro instructions.

	trace-mic
		Traces the executed micro instructions.

	trace-reg [REG]
		Traces the value of a register after each instruction, where REG is the name
		of that register. If REG is omitted then all registers are traced.

	untrace-mac
		Ends tracing the executed macro instructions.

	untrace-mic
		Ends tracing the executed micro instructions.

	untrace-reg [REG]
		Ends tracing the value of a register after each instruction, where REG is
		the name of that register. If REG is omitted then this ends tracing all
		registers.

AUTHOR
	Written by Christian Rösch.

REPORTING BUGS
	Report MicroDebug bugs to <https://github.com/croesch/micro-debug/issues>

COPYRIGHT
	Copyright © 2011 Christian Rösch; Copyright © 1999 Prentice-Hall, Inc.
	License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
	This is free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted by law.
